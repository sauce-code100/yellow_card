name: Test, Build & Deploy

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
  workflow_dispatch:

env:
  IMAGE_TAG: latest
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

jobs:
  test:
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: npm test
      continue-on-error: true

  build-and-push:
    runs-on: ubuntu-latest
    environment: dev
    needs: test
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      shell: bash
      run: |
        docker build . -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        sed -i 's|repository: .*$ECR_REGISTRY/.*|repository: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|' ./terraform/deployment-values.yaml


  deploy:
    runs-on: ubuntu-latest
    environment: dev
    needs: build-and-push
    steps:

    - uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
      
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.0

    - name: deploy to EKS
      run: |
        cd terraform
        terraform init
        terraform fmt
        terraform plan
        terraform apply -auto-approve
      continue-on-error: true